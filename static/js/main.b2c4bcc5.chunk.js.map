{"version":3,"sources":["api/api.js","utils/functions.js","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/User.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Button.jsx","components/UIComponents/UISelect.jsx","components/Filters/PrimaryReleaseYear.jsx","components/UIComponents/UICheckbox.jsx","components/Filters/Genres.jsx","components/Filters/Filters.jsx","components/Movies/MoviesItem.jsx","components/Movies/MoviesList.jsx","pages/MoviesPage/MoviesPages.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","status","json","data","catch","err","e","console","log","LoginForm","state","username","password","errors","submitting","onChange","name","target","value","setState","prevState","base","handleBlur","validateFields","Object","keys","length","onSubmit","a","method","mode","headers","body","JSON","stringify","request_token","result","props","updateSessionId","session_id","user","updateUser","status_message","onLogin","preventDefault","this","className","htmlFor","type","id","placeholder","onBlur","onClick","disabled","Component","Login","toggleModal","showModal","isOpen","toggle","User","width","src","avatar","gravatar","hash","Header","SortBy","sort_by","onChangeFilters","map","label","defaultProps","Button","title","UISelect","labelText","children","PrimaryReleaseYear","page","primary_release_year","onChangePagination","total_pages","bind","UICheckbox","Genres","getGeners","link","res","allGeners","genersNames","gener","genre","push","AppContext","Consumer","context","Filters","filters","with_genres","MoviesItem","item","style","backdrop_path","poster_path","alt","vote_average","release_date","MoviesList","getMovies","movies","results","getReleaseDate","date","uniqueDate","forEach","substring","filter","dates","index","arr","indexOf","releases_on_page","prevProps","movie","MoviesPages","event","with_geners","defaultRealise","cookies","Cookies","React","createContext","App","set","path","maxAge","get","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2c4bcc5.chunk.js","sourcesContent":["export const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '12d4bba12495078b7985d986603f4fcf';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMmQ0YmJhMTI0OTUwNzhiNzk4NWQ5ODY2MDNmNGZjZiIsInN1YiI6IjYxNzk3MWM3NzFmMDk1MDAyOTEyYzY0OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ue3MnVMZ8zM--YdKKuRv7Bqzg0XOsZFcU_A_b7pBofU';\n","export const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((resolve) => {\n        if (resolve.status < 400) {\n          return resolve.json();\n        } else {\n          throw resolve;\n        }\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((err) => {\n        err.json().then((e) => {\n          reject(e);\n          console.log('Error_21: ', e);\n        });\n      });\n  });\n};\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY_3 } from '../../../api/api';\nimport { fetchApi } from '../../../utils/functions';\n\nexport default class LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState((prevState) => ({\n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null,\n      },\n    }));\n  };\n\n  handleBlur = () => {\n    const errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState((prevState) => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Поле не может быть пустым';\n    }\n\n    return errors;\n  };\n\n  onSubmit = async () => {\n    try {\n      this.setState({\n        submitting: true,\n      });\n\n      const data = await fetchApi(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`);\n      const result = await fetchApi(\n        `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password,\n            request_token: data.request_token,\n          }),\n        },\n      );\n\n      const { session_id } = await fetchApi(\n        `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            request_token: result.request_token,\n          }),\n        },\n      )\n        .then((data) => {\n          this.props.updateSessionId(data.session_id);\n          return fetchApi(`${API_URL}/account?api_key=${API_KEY_3}&session_id=${data.session_id}`);\n        })\n        .then((user) => {\n          this.props.updateUser(user);\n          this.setState({\n            submitting: false,\n          });\n        });\n    } catch (error) {\n      this.setState({\n        submitting: false,\n        errors: {\n          base: error.status_message,\n        },\n      });\n    }\n  };\n\n  onLogin = (e) => {\n    e.preventDefault();\n    const errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState((prevState) => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const { username, password, errors, submitting } = this.state;\n    return (\n      <div className='form-login-container'>\n        <form className='form-login'>\n          <h1 className='h3 mb-3 font-weight-normal text-center'>Авторизация</h1>\n          <div className='form-group'>\n            <label htmlFor='username'>Пользователь</label>\n            <input\n              type='text'\n              className='form-control'\n              id='username'\n              placeholder='Пользователь'\n              name='username'\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username && <div className='invalid-feedback'>{errors.username}</div>}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='password'>Пароль</label>\n            <input\n              type='password'\n              className='form-control'\n              id='password'\n              placeholder='Пароль'\n              name='password'\n              value={password}\n              onChange={this.onChange}\n            />\n            {errors.password && <div className='invalid-feedback'>{errors.password}</div>}\n          </div>\n          <button\n            type='submit'\n            className='btn btn-lg btn-primary btn-block'\n            onClick={this.onLogin}\n            disabled={submitting}>\n            Вход\n          </button>\n          {errors.base && <div className='invalid-feedback'>{errors.base}</div>}\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from './LoginForm';\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    const { updateUser, updateSessionId } = this.props;\n    return (\n      <div>\n        <button className='btn btn-success' type='button' onClick={this.toggleModal}>\n          Войти\n        </button>\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n          <ModalBody>\n            <LoginForm updateUser={updateUser} updateSessionId={updateSessionId} />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class User extends Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <img\n          width='40'\n          className='rounded-circle'\n          src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=32`}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Login from './Login/Login';\nimport User from './User';\n\nexport default class Header extends Component {\n  render() {\n    const { user, updateUser, updateSessionId } = this.props;\n    return (\n      <nav className='navbar navbar-dark bg-primary'>\n        <div className='container'>\n          <ul className='navbar-nav'>\n            <li className='nav-item active'>\n              <a className='nav-link'>Домой</a>\n            </li>\n          </ul>\n          {user ? (\n            <User user={user} />\n          ) : (\n            <Login updateUser={updateUser} updateSessionId={updateSessionId} />\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends Component {\n  static propTypes = {\n    sort_by: PropTypes.string,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярное по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярное по возрастанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возрастанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const { sort_by, onChangeFilters, options } = this.props;\n\n    return (\n      <div className='form-group'>\n        <label htmlFor='sort_by'>Сортировать по:</label>\n        <select\n          id='sort_by'\n          name='sort_by'\n          className='from-control'\n          value={sort_by}\n          onChange={onChangeFilters}>\n          {options.map(({ value, label }) => (\n            <option key={value} value={value}>\n              {label}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Button extends Component {\n  render() {\n    const { onClick, title, disabled } = this.props;\n    return (\n      <button type='button' className='btn btn-light' onClick={onClick} disabled={disabled}>\n        {title}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class UISelect extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { id, name, value, onChange, labelText, children } = this.props;\n    return (\n      <div className='form-group'>\n        <label htmlFor={id}>{labelText}</label>\n        <select id={id} className='form-control' name={name} value={value} onChange={onChange}>\n          {children}\n        </select>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Filters/Button';\nimport UISelect from '../UIComponents/UISelect';\n\nexport default class PrimaryReleaseYear extends Component {\n  static defaultProps = {\n    options: [\n      { label: '2018', value: '2018' },\n      { label: '2017', value: '2017' },\n      { label: '2020', value: '2020' },\n      { label: '2021', value: '2021' },\n    ],\n  };\n\n  render() {\n    const {\n      page,\n      primary_release_year,\n      onChangePagination,\n      onChangeFilters,\n      options,\n      total_pages,\n    } = this.props;\n\n    return (\n      <>\n        <UISelect\n          id='primary_release_year'\n          name='primary_release_year'\n          value={primary_release_year}\n          onChange={onChangeFilters}\n          labelText='Год релиза'>\n          {options.map(({ value, label }) => (\n            <option key={value} value={value}>\n              {label}\n            </option>\n          ))}\n        </UISelect>\n        <Button\n          page={page}\n          title='Назад'\n          onClick={onChangePagination.bind(null, page - 1)}\n          disabled={page === 1}\n        />\n        <Button\n          page={page}\n          title='Вперед'\n          onClick={onChangePagination.bind(null, page + 1)}\n          disabled={page === total_pages}\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class UICheckbox extends Component {\n  render() {\n    const { id, name } = this.props;\n    return (\n      <>\n        <input className='form-check-input' type='checkbox' value='' id={id} />\n        <label className='form-check-label' htmlFor={id}>\n          {name}\n        </label>\n        <br />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { AppContext } from '../App';\nimport { API_URL, API_KEY_3 } from '../../api/api';\n\nimport UICheckbox from '../UIComponents/UICheckbox';\n\nclass Genres extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allGeners: [],\n    };\n  }\n\n  getGeners = async () => {\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`;\n\n    await fetch(link)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          allGeners: data,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getGeners();\n  }\n\n  render() {\n    const { allGeners } = this.state;\n    let genersNames = [];\n\n    for (let gener in allGeners) {\n      allGeners[gener].map((genre) => {\n        return genersNames.push(genre);\n      });\n    }\n\n    return (\n      <div className='form-check'>\n        {genersNames.map(({ id, name }) => (\n          <UICheckbox key={id} id={id} name={name} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default () => {\n  return (\n    <AppContext.Consumer>\n      {(context) => {\n        return <Genres allGeners={context} />;\n      }}\n    </AppContext.Consumer>\n  );\n};\n","import React, { Component } from 'react';\n\nimport SortBy from './SortBy';\nimport PrimaryReleaseYear from './PrimaryReleaseYear';\nimport Genres from './Genres';\n\nexport default class Filters extends Component {\n  render() {\n    const {\n      filters: { sort_by, primary_release_year, with_genres },\n      page,\n      total_pages,\n      onChangeFilters,\n      onChangePagination,\n    } = this.props;\n\n    return (\n      <form className='mb-3'>\n        <SortBy value={sort_by} onChangeFilters={onChangeFilters} />\n        <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\n        <PrimaryReleaseYear\n          page={page}\n          total_pages={total_pages}\n          onChangePagination={onChangePagination}\n          onChangeFilters={onChangeFilters}\n          primary_release_year={primary_release_year}\n        />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class MoviesItem extends Component {\n  render() {\n    const { item } = this.props;\n\n    return (\n      <div className='card' style={{ width: '100%' }}>\n        <img\n          className='card-img-top card-img--height'\n          src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n          alt='poster'\n        />\n        <div className='card-body'>\n          <h6 className='card-title'>{item.title}</h6>\n          <div className='card-text'>Рейтинг: {item.vote_average}</div>\n          <div className='card-text'>Релиз: {item.release_date}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY_3 } from '../../api/api';\n\nimport MoviesItem from './MoviesItem';\n\nexport default class MoviesList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      releases_on_page: {},\n    };\n  }\n\n  getMovies = (filters, page) => {\n    const { sort_by } = filters;\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}`;\n\n    fetch(link)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          movies: data.results,\n        });\n      });\n  };\n\n  getReleaseDate = () => {\n    const { movies } = this.state;\n    let date = [];\n    let uniqueDate = [];\n\n    movies.forEach(({ release_date }) => {\n      date.push(release_date.substring(0, 4));\n    });\n\n    const res = date.filter((dates, index, arr) => {\n      return arr.indexOf(dates) === index;\n    });\n\n    uniqueDate.push(res);\n    return uniqueDate;\n  };\n\n  componentDidMount() {\n    this.getMovies(this.props.filters, this.props.page);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.filters.sort_by !== prevProps.filters.sort_by) {\n      this.props.onChangePagination(1);\n      this.getMovies(this.props.filters, 1);\n    }\n\n    if (this.props.page !== prevProps.page) {\n      this.getMovies(this.props.filters, this.props.page);\n    }\n\n    this.state.releases_on_page = this.getReleaseDate();\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className='row'>\n        {movies &&\n          movies.map((movie) => {\n            return (\n              <div key={movie.id} className='col-6 mb-4'>\n                <MoviesItem item={movie} />\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Filters from '../../components/Filters/Filters';\nimport MoviesList from '../../components/Movies/MoviesList';\n\nexport default class MoviesPages extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '2019',\n        with_geners: [1],\n      },\n      page: 1,\n      total_pages: 500,\n    };\n  }\n\n  onChangeFilters = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    this.setState((prevState) => ({\n      filters: {\n        ...prevState.filters,\n        [name]: value,\n      },\n    }));\n  };\n\n  onChangePagination = (page) => {\n    this.setState({\n      page,\n      total_pages: this.state.total_pages,\n    });\n  };\n\n  render() {\n    const { filters, page, total_pages, with_genres } = this.state;\n    const defaultRealise = this.state.filters.primary_release_year;\n\n    return (\n      <>\n        <div className='container'>\n          <div className='row mt-4'>\n            <div className='col-4'>\n              <div className='card' style={{ width: '100%' }}>\n                <div className='card-body'>\n                  <h3>Фильтры</h3>\n                  <Filters\n                    page={page}\n                    filters={filters}\n                    total_pages={total_pages}\n                    with_genres={with_genres}\n                    primary_release_year={defaultRealise}\n                    onChangeFilters={this.onChangeFilters}\n                    onChangePagination={this.onChangePagination}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='col-8'>\n              <MoviesList\n                filters={filters}\n                page={page}\n                onChangePagination={this.onChangePagination}\n                onChangeFilters={this.onChangeFilters}\n                primary_release_year={filters.primary_release_year}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Cookies from 'universal-cookie';\n\nimport Header from './Header/Header';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\n\nimport MoviesPages from '../pages/MoviesPage/MoviesPages';\n\nimport { fetchApi } from '../utils/functions';\nimport { API_URL, API_KEY_3 } from '../api/api';\n\nconst cookies = new Cookies();\n\nexport const AppContext = React.createContext();\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: null,\n      session_id: null,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '2019',\n        with_geners: [1],\n      },\n      page: 1,\n      total_pages: 500,\n    };\n  }\n\n  updateUser = (user) => {\n    this.setState({\n      user,\n    });\n  };\n\n  updateSessionId = (session_id) => {\n    cookies.set('session_id', session_id, {\n      path: '/',\n      maxAge: 2592000,\n    });\n    this.setState({\n      session_id,\n    });\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get('session_id');\n    if (session_id) {\n      fetchApi(`${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`).then((user) => {\n        this.updateUser(user);\n      });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        <AppContext.Provider value={this.state.filters.with_geners}>\n          <Header user={user} updateUser={this.updateUser} updateSessionId={this.updateSessionId} />\n          <MoviesPages />\n        </AppContext.Provider>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}